<div style="background-color: #37517e">
    <section class="vh-100">
        <div class="container py-0 h-100">
            <div class="row d-flex justify-content-center align-items-center h-100">
                <div class="col-12 col-md-8 col-lg-6 col-xl-4">
                    <div class="card text-dark" style="border-radius: 1rem;">
                        <div class="card-body bg-light p-4 rounded text-center">
                            <div class="section-title">
                                <h2 class="mb-1 text-center" style="font-size: 25px;">Criar conta</h2>
                            </div>
                            <div class="mb-md-0 mt-md-1 pb-1">
                                {{>_preloader}}
                                {{>_alertDanger}}
                                {{>_alertSuccess}}
                               
                                <form method="POST" action="" id="form" class="form-user">
                                    <div class="form-floating mb-2">
                                        <input type="text" class="form-control required" name="username" id="username" placeholder="Nome e sobrenome">
                                        <label for="inputName" style="font-size: 15px;">Nome</label>
                                        <span class="span-required text-start" style="font-size: 15px;">Nome deve ter no mínimo 3 caracteres</span>
                                    </div>
                                    <div class="form-floating mb-2">
                                        <input type="email" class="form-control required" name="email" id="email" placeholder="E-mail">
                                        <label for="inputEmail" style="font-size: 15px;">E-mail</label>
                                        <span class="span-required text-start" style="font-size: 15px;">Digite um e-mail válido</span> 
                                    </div>
                                    <div class="form-floating mb-2">
                                        <input type="password" class="form-control required" name="password" id="password" placeholder="Senha">
                                        <label for="inputPassword" style="font-size: 15px;">Senha</label>
                                        <span class="span-required text-start" style="font-size: 15px;">Digite uma senha com no mínimo 8 caracteres</span>
                                    </div>
                                    {{!-- <div class="form-floating mb-2">
                                        <input type="password" class="form-control required" name="confirmPassword" id="confirmPassword" autocomplete="on" placeholder="Confirmar senha" title="Senha">
                                        <label for="inputPassword" style="font-size: 15px;">Confirmar senha</label>
                                        <span class="span-required text-start" style="font-size: 15px;">Senhas devem ser compatíveis</span>
                                    </div> --}}
                                    <input class="btn btn-lg btn-success mt-4 w-100" id="submit" style="font-size: 17px;" type="submit" value="Criar">
                                </form>
                                <div class="mt-4">
                                    <div class="d-flex justify-content-center links">
                                        <p style="font-size: 15px;"> Já possui uma conta? <a href="/login" class="ml-2">Login</a></p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div> 
                </div> 
            </div>   
        </div> 
    </section>   
</div>

<script>
$(document).ready(() => {
    const form = $('#form');
    const buttonSubmit = form.find('input[type="submit"]');
<<<<<<< HEAD
    const inputFields = form.find('input[type="username"], input[type="email"], input[type="password"]');
=======
    const inputFields = form.find('input[type="text"], input[type="email"], input[type="password"]');

    function verificarCamposVazios() {
        return inputFields.toArray().some(field => $(field).val().trim() === '');
    }
>>>>>>> ca777cc64a9b5b061a43eba41bf1033f00d6501e


    function verifyFieldsEmpty() {
        return inputFields.toArray().some(field => $(field).val().trim() === '');
    }

    function verificarEmailValido() {
        const email = $('#email').val();
        if(email === '') {
            return false;
        }

        $.ajax({
            type: 'POST',
            url: '/verificar-email',
            data: JSON.stringify({ email: email }),
            contentType: 'application/json',    
            success: (response) => {
                console.log('Resposta do servidor:', response);
                $('#error-message').text('').hide();

                const isEmailValid = checkEmailValidity(response);

                if (isEmailValid && !verifyFieldsEmpty()) {
                // Email é válido
                    habilitarBotaoDeEnvio();
                } else {
                    // Email não é válido
                    desabilitarBotaoDeEnvio();
                    showError('Este e-mail já está cadastrado.');
                }
            },      
            error: function(xhr, status, error) {
                console.error('Erro ao verificar o email:', error);
<<<<<<< HEAD
                $('#error-message').text(xhr.responseText).show();                                                                                                  
                desabilitarBotaoDeEnvio();                                                                                                  
                showError('Informe um e-mal válido.');  
=======
                $('#error-message').text(xhr.responseText).show();  
                desabilitarBotaoDeEnvio();
                showError('Informe um e-mail válido.');
>>>>>>> ca777cc64a9b5b061a43eba41bf1033f00d6501e
            }
        });
    }   

    inputFields.on('input', () => {
        if(!verificarCamposVazios()) {
            verificarEmailValido();
        } else {
            desabilitarBotaoDeEnvio();
        }
    });     

    function checkEmailValidity(response) {
        console.log('Resposta do servidor:', response);
        if(response && response.isValid !== undefined) {
            console.log('Campo "isValid" na resposta:', response.isValid);
            return response.isValid === true;    
        } else {
            console.log('Resposta não contém um campo "isValid" ou está vazio.');
            return false;
        }
    }

    function habilitarBotaoDeEnvio() {
        return buttonSubmit.prop("disabled", false);
    }

    function desabilitarBotaoDeEnvio() {
        return buttonSubmit.prop("disabled", true);
    }

    function showError(message) {
        const messageError = $('#error-message');
        messageError.text(message);
        messageError.show();
    }


    form.on('submit', (e) => {
        e.preventDefault(); 

        const username = $('#username').val();
        const email = $('#email').val();
        const password = $('#password').val();
        const confirmPassword = $('#confirmPassword').val();
        
        $.ajax({
            type: 'POST',
            url: '/register',
            data: JSON.stringify({ 
                username: username,
                email: email,
                password: password,
                confirmPassword: confirmPassword
            }),
            contentType: 'application/json',
            success: (response) => {
                $('#error-success').text(response).show();
                console.log('Resposta do servidor', response);
            },
            error: (xhr, status, error) => {
                $('#error-message').text(xhr.responseText).show();
                console.log('Erro ao criar usuário:', xhr.responseText);
            }
        });

    });
 });
</script>